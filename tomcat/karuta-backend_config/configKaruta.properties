# =========================================
# ======== Karuta Configuration ===========
# =========================================

# Options
#enable_password_reset=y
#activate_login=N

# Password reset message:
email_password_reset="Your new password: "

### Messaging type (email|sakai),
### if commented, sending notification will be disabled
notification=email
#notification=sakai

# ==== When notification = sakai ====
# Just changing SERVER should be sufficient
sakaiDirectSessionUrl=http://SERVER/direct/session
sakaiUsername=testadmin
sakaiPassword=testadmin

sakaiInterface=http://SERVER/direct/notify/post/

# ==== When notification = email =====
## Log in to server
## mail_login can be different than mail_sender. In some case it's the same
mail_login=mail_login
## If mail_sender isn't defined, mail_login is used
mail_sender=USERNAME@example.com
mail_password=PASSWORD
## SMTP Server info
smtp.server=smtp.example.com
smtp.port=587
smtp.useauth=true
smtp.starttls=true
smtp.tlsver=TLSv1.2
## cc email for some email, notably password recovery log
sys_email=info@domain.com

### ==== Logging configuration ====
## If edit_log is empty, don't log editions
#auth_log=auth.log
#edit_log=edit.log
#error_log=error.log
#security_log=security.log
## Logging interface
logfile_1=base.log
logfile_2=special.log
logfile_3=other.log

# ==== Database
# Configuring DB type,
# and redirection if you plan on separating servlets on different servers (need testing)
dataProviderClass=com.eportfolium.karuta.data.provider.MysqlDataProvider
# optional: to use a tomcat resouce jdbc pool uncomment and set your ressource name
# other properties will be ignored
# JDBC.external.resourceName=jdbc/karutaBakend
DBUser=karuta
DBPass=karuta_password
DBDriver=com.mysql.jdbc.Driver
#DBDriver=org.mariadb.jdbc.Driver
DBUrl=jdbc:mysql://localhost/karuta-backend?useUnicode=true&useEncoding=true&characterEncoding=UTF-8&serverTimezone=UTC
#DBUrl=jdbc:mariadb://localhost/karuta-backend?useUnicode=true&useEncoding=true&characterEncoding=UTF-8
serverType=mysql
#serverType=oracle
#DBDriver=oracle.jdbc.driver.OracleDriver
#DBUrl=jdbc:oracle:thin:@//localhost:1234/KARUTA
### Pooling configuration
DB.MaxWait=1000
DB.MaxTotal=400
DB.MinIdle=5
DB.MaxIdle=50
DB.WaitEviction=1000
DB.NumTestEviction=-10

### Servlet redirection (When putting services on different servers)
backendserver=http://localhost:8080/karuta-backend
fileserver=http://localhost:8080/karuta-fileserver
baseui_redirect_location=/karuta/
ui_redirect_location=/karuta/application/htm/karuta.htm

## When commented, XSLInternal == backendserver.
## Uncomment and change if PDF generation have trouble with the network
#XSLInternal=http://localhost:8080/karuta-backend

### ==== CSV related
# Default: csv_separator=,
#csv_separator=,

# ==== Direct URL key
directkey=directkey

# ==== CAS ====
#casCreateAccount=y
#casUrlValidation=https://{CAS_SERVER}/cas
# mapping usefull when having several CAS Auth depending on different appName - apply a json format for conf to apply a MAP.
#casUrlValidationMapping={"https://domain1.edu.fr/univ1/karuta/application/htm/karuta.htm":"https://cas.univ1.fr/cas", "https://domain1.edu.fr/univ2/karuta/application/htm/karuta.htm":""https://cas.univ1.fr/cas"}
# If you have the network setup:
# {internet} <-> {proxy https} <-> {backend http}
# Have "X-Forwarded-Proto https" forwarded from the proxy

# ==== Elgg ====
#elggDefaultApiUrl=http://{ELGG_SERVER}/elgg/services/api/rest/json/
#elggDefaultSiteUrl=http://{ELGG_SERVER}/elgg/
#elggApiKey=apikey
#elggDefaultUserPassword=defaultpassword

# ==== LTI configuration =====
### Uncomment and configure when you want to use LTI
#basiclti.provider.KARUTA.secret=asdf1234
## Need to configure what user id variable to use.
# LIS: lis_person_sourcedid, Moodle: ext_user_username, Blackboard: custom_lis_user_username
#lti_userid=lis_person_sourcedid
#lti_create_user=y
#lti_email_as_username=y

### Redirection for Karuta 1.2.x
#lti_redirect_location=/karuta/karuta/htm/list.htm
### Redirection for Karuta 2.x
#lti_redirect_location=/karuta/karuta/htm/karuta.htm

# ==== Shibboleth attrib =====
## Set it to true if you want to activate the Shibboleth Auth, default is false
#shib_auth=true
## Uncomment to set it to false, default is true
#shib_create_user=false
## To override the default REMOTE_USER header/attribute to get the principal attribute, default is REMOTE_USER
#shib_remote_user=eppn

## If shib_firstname or shib_lastname is set, shib_fullname is ignored
#shib_firstname=firstname
#shib_lastname=lastname
## Assume format is only 2 part "[Last name] [First name]"
#shib_fullname=fullname
#shib_email=email
#shib_logout=https://{IDP_SERVER}/idp/profile/Logout

# ==== External account creation ====
# -- For cases when portfolios are created at user creation --
#createAsDesigner=true
# == Assigning external value to Karuta DB ==
#=display_firstname
#=display_lastname
#=email

# ==== ROME service =====
#ROMEServiceURL = "SERVICE_URL";
#ROMEclientid = "MY_CLIENT_ID";
#ROMEclientsecret = "MY_CLIENT_SECRET";
#ROMEscope = "REALM_SCOPE";
#ROMERepoURL = "REPO_URL";

# ==== OAuth2 service =====
#URLAuthorize=https://AUTHSERVER/oauth2/v2/authorize
#URLToken=https://AUTHSERVER/oauth2/v2/token
#URLKeys=https://AUTHSERVER/discovery/keys
# Application id
#OAUth_client_id=MY_APPLICATION_ID
#OAuth_client_secret=MY_APPLICATION_SECRET
#OAuth_scope=openid+profile+offline_access


# ==== LDAP ======
#ldap.provider.url=ldap://xxx.yyy:389
#ldap.provider.useSSL=Y
#ldap.context.name=username
#ldap.context.credential=MotDePasse
#ldap.baseDn=ou=people,dc=u-cergy,dc=fr
# Can also be (&(supannEtablissement=xxxx)(uid=%u))
#ldap.parameter=(uid=%u)
#ldap.user.firstname=sn
#ldap.user.lastname=givenName
#ldap.user.mail=mail
#ldap.user.affiliation=eduPersonPrimaryAffiliation